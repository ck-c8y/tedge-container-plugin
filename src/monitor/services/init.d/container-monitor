#!/bin/sh
### BEGIN INIT INFO
# Provides:          container-monitor
# Required-Start:    $remote_fs $syslog
# Required-Stop:     $remote_fs $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: thin-edge.io container monitoring plugin
# Description:       Monitor the status of containers and publish the state to thin-edge.io
### END INIT INFO

dir="/var"
cmd="/usr/bin/container-monitor"
user="root"

name=$(basename "$0")
pid_file="/var/run/$name.pid"
stdout_log="/var/log/$name.log"
stderr_log="/var/log/$name.err"

# Check if sudo or su is installed, otherwise don't use it
SUDO=""
if command -V sudo >/dev/null 2>&1; then
  SUDO="sudo"
  if [ -n "$user" ]; then
    SUDO="sudo -u $user"
  fi
else command -V su >/dev/null
  SUDO="su"
  if [ -n "$user" ]; then
    SUDO="su - $user"
  fi
fi

get_pid() {
    cat "$pid_file"
}

is_running() {
    [ -f "$pid_file" ] && ps -p "$(get_pid)" > /dev/null 2>&1
}

case "$1" in
    start)
      if is_running; then
          echo "Already started"
      else
          echo "Starting $name"
          cd "$dir" || exit 1
          $SUDO $cmd >> "$stdout_log" 2>> "$stderr_log" &
          echo $! > "$pid_file"
          if ! is_running; then
              echo "Unable to start, see $stdout_log and $stderr_log"
              exit 1
          fi
      fi
      ;;
    stop)
      if is_running; then
          printf "Stopping %s.." "$name"
          kill "$(get_pid)"
          for _ in 1 2 3 4 5 6 7 8 9 10; do
              if ! is_running; then
                  break
              fi
              printf "."
              sleep 1
          done
          echo

          if is_running; then
              echo "Not stopped; may still be shutting down or shutdown may have failed"
              exit 1
          else
              echo "Stopped"
              if [ -f "$pid_file" ]; then
                  rm "$pid_file"
              fi
          fi
      else
          echo "Not running"
      fi
      ;;
    reload)
      if is_running; then
          echo "Reloading configuration"
          kill -HUP "$(get_pid)"
      fi
      ;;
    restart)
      "$0" stop
      if is_running; then
          echo "Unable to stop, will not attempt to start"
          exit 1
      fi
      "$0" start
      ;;
    status)
      if is_running; then
          echo "Running"
      else
          echo "Stopped"
          exit 1
      fi
      ;;
    *)
      echo "Usage: $0 {start|stop|reload|restart|status}"
      exit 1
      ;;
esac

exit 0
